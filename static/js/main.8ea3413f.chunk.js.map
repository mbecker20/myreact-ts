{"version":3,"sources":["components/ChessGame/pieces/icons/whiteBishop.svg","components/ChessGame/pieces/icons/blackBishop.svg","components/ChessGame/pieces/icons/whiteKing.svg","components/ChessGame/pieces/icons/blackKing.svg","components/ChessGame/pieces/icons/whiteKnight.svg","components/ChessGame/pieces/icons/blackKnight.svg","components/ChessGame/pieces/icons/whitePawn.svg","components/ChessGame/pieces/icons/blackPawn.svg","components/ChessGame/pieces/icons/whiteQueen.svg","components/ChessGame/pieces/icons/blackQueen.svg","components/ChessGame/pieces/icons/whiteRook.svg","components/ChessGame/pieces/icons/blackRook.svg","App/NavBar/TopBar.tsx","components/Grid/style.ts","components/Grid/GridContainer.tsx","components/Grid/GridStaticContainer.tsx","components/Grid/GridItem.tsx","components/Grid/GridStaticItem.tsx","helpers/vecFuncs.ts","components/Grid/main.tsx","components/Button/style.ts","appColors.ts","components/Button/main.tsx","App/NavBar/SideBarButton.tsx","App/NavBar/SideBar.tsx","App/NavBar/main.tsx","components/TilePuzzle/Tile.tsx","components/TilePuzzle/style.ts","helpers/randomGen.ts","components/TilePuzzle/helpers.ts","helpers/genFuncs.ts","components/TilePuzzle/main.tsx","components/Button/TextButton.tsx","components/ChessGame/style.ts","components/ChessGame/BoardTile.tsx","components/ChessGame/HighlightedSquare.tsx","components/ChessGame/pieces/pieceStyle.ts","components/ChessGame/pieces/pieceJSS.ts","components/ChessGame/pieces/Bishop.tsx","components/ChessGame/pieces/King.tsx","components/ChessGame/pieces/Knight.tsx","components/ChessGame/pieces/Pawn.tsx","components/ChessGame/pieces/Queen.tsx","components/ChessGame/pieces/Rook.tsx","components/ChessGame/helpers.ts","components/ChessGame/Board.tsx","components/ChessGame/pieces/RenderPieces.tsx","components/ChessGame/main.tsx","App/style.ts","App/Homepage.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","TopBar","classes","text","className","useStyles","createUseStyles","Container","width","height","position","Item","display","alignItems","justifyContent","transform","GridContainer","children","style","div","GridStaticContainer","GridItem","gridPos","grid","springStyle","useSpring","left","top","Object","assign","GridStaticItem","baseStyle","range","start","stop","out","i","push","makeGrid","numRows","numCols","valFunc","row","j","makeLayoutGrid","padding","gridArray","stepLeft","stepTop","p0left","p0top","createGridArray","StaticContainer","StaticItem","Button","backgroundColor","theme","colors","secondary","borderRadius","boxShadow","cursor","userSelect","primary","tertiary","onClick","useState","pressed","setPressed","buttonSpring","fontSize","onMouseDown","onMouseUp","baseTextStyle","SideBarButton","isOpen","openWidth","closedWidth","openText","closedText","closedTextSpring","opacity","openTextSpring","baseStyleCopy","baseTextStyleCopy","SideBar","toggleOpen","navSpring","Children","map","child","index","key","NavBar","Fragment","Tile","number","Bounder","TilePuzzle","props","Solved","randomGenInt","min","max","Math","round","random","randomGen","nextToEmpty","tileGrid","tileIndex","tilePos","emptyPos","empty","getRandIndexNextToEmpty","tileRange","indices","length","isSolved","isSolvedRec","tile","arr1","arr2","arrayEqual","solvedPosition","moveToEmpty","temp","layoutGrid","tg","floor","col","isEmpty","makeTileGrid","PuzzleGrid","setSolved","numMoves","setState","permaSolved","boundingGrid","shuffleCount","setShuffleCount","solved","solvedSpring","shuffleTiles","TextButton","Piece","HighlightedSquare","whiteTileStyle","blackTileStyle","BoardTile","isWhite","cx","cy","r","stroke","strokeWidth","fill","gridPieceStyle","Bishop","isWhitesTurn","config","tension","mass","friction","gridPieceSpringStyle","src","whiteBishopIcon","blackBishopIcon","alt","King","whiteKingIcon","blackKingIcon","Knight","whiteKnightIcon","blackKnightIcon","Pawn","whitePawnIcon","blackPawnIcon","Queen","whiteQueenIcon","blackQueenIcon","Rook","whiteRookIcon","blackRookIcon","boardGridEmpty","boardGrid","boardPos","boardGridEmptyOrOtherTeam","otherTeam","tileContent","isEmptyDelta","deltaRow","deltaCol","newRow","newCol","isCaptureDelta","boardGridOtherTeam","isValidDelta","showPossibleMoves","chessBoard","ID","highlightedSquares","specialHighlightedSquares","piecesKey","pawn","step","startingRank","otherColor","aliveOtherPiecesKey","possibleMoves","target","movePiece","posContent","negContent","slice","canEnPassantNeg","canEnPassantPos","enPassant","showPossiblePawnMoves","king","canCastleShort","shortCastle","canCastleLong","longCastle","showPossibleKingMoves","showPossibleQueenMoves","showPossibleRookMoves","showPossibleBishopMoves","showPossibleKnightMoves","makePiece","component","pieces","team","Component","makePieces","backRank","pawnRank","enPassantStepBack","deadOtherPiecesKey","capturedID","piece","targetID","otherTeamKey","boardContainerStyle","Board","numClicks","setNumClicks","pieceID","flat","state","keys","aliveWhitePieces","highlightingPiece","renderWhitePieces","aliveBlackPieces","renderBlackPieces","square","movingPiece","moveList","deadWhitePieces","deadBlackPieces","undefined","makeChessBoard","ChessGame","textAlign","flexDirection","color","zIndex","textOrientation","AppContent","overflow","Router","Homepage","contentStyle","App","open","toggle","navigate","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ea3413f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiteBishop.19c4b7eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackBishop.8b5c63b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteKing.99a07504.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackKing.a8e54690.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteKnight.4a32b3c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackKnight.dd7d65b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitePawn.22ecec5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackPawn.efb79a63.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteQueen.7d26a450.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackQueen.9beb2c29.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteRook.81a8c280.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackRook.490d0891.svg\";","import React from 'react';\n\ninterface Classes {\n  TopBar: any\n}\n\ninterface Props {\n  classes: Classes,\n  text: string\n}\n\nfunction TopBar({ classes, text }: Props): JSX.Element {\n  return (\n    <div className={classes.TopBar}>\n      {text}\n    </div>\n  )\n}\n\nexport default TopBar","import {createUseStyles} from 'react-jss'\n\n// useStyles will input a props object\nconst useStyles = createUseStyles({\n  Container: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n\n  Item: {\n    display: 'flex',\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transform: 'translate(-50%, -50%)',\n  },\n})\n\nexport default useStyles;","import React from 'react'\nimport useStyles from './style'\nimport { ContainerProps } from './types'\nimport { animated } from 'react-spring'\n\nfunction GridContainer({ children, style }: ContainerProps) {\n  // everything done in percentages\n  // children of GridContainer must be GridItem\n  const classes = useStyles()\n  return (\n    <animated.div className={classes.Container} style={style}>\n      {children}\n    </animated.div>\n  )\n}\n\nexport default GridContainer","import React from 'react'\nimport useStyles from './style'\nimport { ContainerProps } from './types'\n\nfunction GridStaticContainer({ children, style }: ContainerProps) {\n  // everything done in percentages\n  // children of GridContainer must be GridItem\n  const classes = useStyles()\n  return (\n    <div className={classes.Container} style={style}>\n      {children}\n    </div>\n  )\n}\n\nexport default GridStaticContainer","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport useStyles from './style'\nimport { ItemProps } from './types'\n\nfunction GridItem({ gridPos, grid, style, children }: ItemProps) {\n  // moves item toward gridPos\n  const classes = useStyles()\n  const springStyle = useSpring({\n    left: grid[gridPos[0]][gridPos[1]][0],\n    top: grid[gridPos[0]][gridPos[1]][1],\n  })\n  \n  return (\n    <animated.div \n      className={classes.Item} \n      style={Object.assign(springStyle, style)}\n    >\n      {children}\n    </animated.div>\n  )\n}\n\nexport default GridItem","import React from 'react'\nimport useStyles from './style'\nimport { ItemProps } from './types'\n\ninterface BaseStyle {\n  top: string,\n  left: string,\n}\n\nfunction GridStaticItem({ gridPos, grid, style, children }: ItemProps) {\n  // moves item toward gridPos\n  const classes = useStyles()\n  const baseStyle: BaseStyle = {\n    left: grid[gridPos[0]][gridPos[1]][0],\n    top: grid[gridPos[0]][gridPos[1]][1],\n  }\n  \n  return (\n    <div\n      className={classes.Item} \n      style={Object.assign(baseStyle, style)}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default GridStaticItem","import { \n\tsqrt,\n\tdot,\n\tadd,\n\tmultiply,\n} from 'mathjs';\n\nfunction addVec(v1: number[], v2: number[]): number[] {\n\treturn add(v1, v2) as number[]\n}\n\nexport function Mag(vec: number[]): number {\n\treturn sqrt(dot(vec, vec));\n}\n\nexport function Unit(vec: number[]): number[] {\n\tconst magnitude = Mag(vec);\n\tif (magnitude !== 0) {\n\t\treturn multiply(vec, 1 / magnitude);\n\t} else {\n\t\treturn [0, 0, 0];\n\t}\n}\n\nexport function UnitFromMag(vec: number[], mag: number): number[] {\n\tif (mag !== 0) {\n\t\treturn multiply(vec, 1/mag);\n\t} else {\n\t\treturn [0, 0, 0];\n\t}\n}\n\nexport function Unit2D(vec: number[]): number[] {\n\tconst magnitude = Mag(vec);\n\tif (magnitude !== 0) {\n\t\treturn multiply(vec, 1 / magnitude);\n\t} else {\n\t\treturn [0, 0];\n\t}\n}\n\nexport function R(v1: number[], v2: number[]): number[] { // set return type to any to avoid add return type math.MathType which breaks everything\n\t//returns vector from v1 to v2\n\treturn addVec(v1, multiply(v1, -1))\n}\n\nexport function RHat(v1: number[], v2: number[]): number[] {\n\treturn Unit(R(v1, v2));\n}\n\nexport function ScaleVecToLength(vec: number[], length: number): number[] {\n\treturn multiply(Unit(vec), length);\n}\n\nexport function ScaleVecToLengthFromMag(vec: number[], mag: number, length: number): number[] {\n\treturn multiply(UnitFromMag(vec, mag), length);\n}\n\nexport function GetAzimXZ(vec: number[]): number | undefined {\n\t// ground plane is xz\n\t// from -pi to pi\n\t// measures azim from pos x axis\n\t// positive azim if z < 0, negative if z > 0 because positive rotation about yHat moves xHat away from positive zhat\n\t// vec must be unit\n\tif (vec[0] > 0) {\n\t\tif (vec[2] > 0) {\n\t\t\treturn -Math.atan2(vec[2], vec[0]);\n\t\t} else if (vec[2] < 0) {\n\t\t\treturn Math.atan2(-vec[2], vec[0]);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} else if (vec[0] < 0) {\n\t\tif (vec[2] > 0) {\n\t\t\treturn Math.atan2(vec[2], -vec[0]) - Math.PI;\n\t\t} else if (vec[2] < 0) {\n\t\t\treturn Math.PI - Math.atan2(-vec[2], -vec[0]);\n\t\t} else {\n\t\t\treturn Math.PI;\n\t\t}\n\t} else { // vec[0] = 0;\n\t\tif (vec[2] > 0) {\n\t\t\treturn -Math.PI / 2;\n\t\t} else if (vec[2] < 0) {\n\t\t\treturn Math.PI / 2;\n\t\t}\n\t}\n\treturn undefined\n}\n\nexport function GetAzimZX(vec: number[]): number | undefined {\n\t// ground plane is zx\n\t// from -pi to pi\n\t// measures azim from pos Z axis (direction camera points)\n\t// positive azim if x > 0, negative if x < 0 because positive rotation about yHat moves zHat towards positive xhat\n\t// vec must be unit\n\tif (vec[2] > 0) {\n\t\tif (vec[0] > 0) {\n\t\t\treturn Math.atan2(vec[0], vec[2]);\n\t\t} else if (vec[0] < 0) {\n\t\t\treturn -Math.atan2(-vec[0], vec[2]);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} else if (vec[2] < 0) {\n\t\tif (vec[0] > 0) {\n\t\t\treturn Math.PI - Math.atan2(vec[0], -vec[2]);\n\t\t} else if (vec[0] < 0) {\n\t\t\treturn Math.atan2(-vec[0], -vec[2]) - Math.PI;\n\t\t} else {\n\t\t\treturn Math.PI;\n\t\t}\n\t} else { // vec[2] = 0;\n\t\tif (vec[0] > 0) {\n\t\t\treturn Math.PI / 2;\n\t\t} else if (vec[0] < 0) {\n\t\t\treturn -Math.PI / 2;\n\t\t}\n\t}\n\treturn undefined\n}\n\nexport function GetAzimXY(vec: number[]): number | undefined {\n\t// ground plane is xy\n\t// from -pi to pi\n\t// measures azim from pos x axis\n\t// positive azim if y > 0, negative if y < 0;\n\t// vec must be unit\n\tif (vec[0] > 0) {\n\t\tif (vec[1] > 0) {\n\t\t\treturn Math.atan2(vec[1], vec[0]);\n\t\t} else if (vec[1] < 0) {\n\t\t\treturn -Math.atan2(-vec[1], vec[0]);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} else if (vec[0] < 0) {\n\t\tif (vec[1] > 0) {\n\t\t\treturn Math.PI - Math.atan2(vec[1], -vec[0]);\n\t\t} else if (vec[1] < 0) {\n\t\t\treturn Math.atan2(-vec[1], -vec[0]) - Math.PI;\n\t\t} else {\n\t\t\treturn Math.PI;\n\t\t}\n\t} else { // vec[0] = 0;\n\t\tif (vec[1] > 0) {\n\t\t\treturn Math.PI / 2;\n\t\t} else if (vec[1] < 0) {\n\t\t\treturn -Math.PI / 2;\n\t\t}\n\t}\n\treturn undefined\n}\n\nexport function GetAltAzimXZ(vec: number[]): [number | undefined, number | undefined] {\n\t// vec must be unit vector\n\t// for xz ground plane\n\tconst alt = Math.asin(vec[1]);\n\tconst azim = GetAzimXZ(vec);\n\treturn [alt, azim];\n}\n\nexport function GetAltAzimZX(vec: number[]): [number | undefined, number | undefined] {\n\t// vec must be unit vector\n\t// for xz ground, measuring from pos Z axis\n\t// alt is neg bc neg rot about x rotates poz z upwards\n\tconst alt: number = -Math.asin(vec[1]);\n\tconst azim = GetAzimZX(vec);\n\treturn [alt, azim];\n}\n\nexport function GetAltAzimXY(vec: number[]): [number | undefined, number | undefined] {\n\t// vec must be unit vector\n\t// for xy ground plane\n\t// alt is negative because positive rotation about yHat moves xHat away from positive zhat\n\tconst alt = -Math.asin(vec[2]);\n\tconst azim = GetAzimXY(vec);\n\treturn [alt, azim];\n}\n\nexport function AddVecToRows(mat: number[][], vec: number[]): number[][] {\n\t// does not work for math.js matrices. use standard js matrices. does not change input matrix.\n\treturn mat.map(function(row) {\n\t\treturn addVec(row, vec);\n\t})\n}\n\nexport function GetAvgPoint(pointsMat: number[][]): number[] {\n\tlet avg = [0, 0, 0];\n\tpointsMat.forEach(function (point) {\n\t\tavg = addVec(avg, point);\n\t});\n\treturn multiply(avg, 1 / pointsMat.length);\n}\n\nexport function GetAvgPoint2D(pointsMat: number[][]): number[] {\n\tlet avg = [0, 0];\n\tpointsMat.forEach(function (point) {\n\t\tavg = addVec(avg, point);\n\t});\n\treturn multiply(avg, 1 / pointsMat.length);\n}\n\nexport function ArrSum(arrayOfNums: number[]): number {\n\treturn arrayOfNums.reduce(function (a, b) {\n\t\treturn a + b;\n\t}, 0);\n}\n\nexport function GetAvgNum(arrayOfNums: number[]): number {\n\treturn ArrSum(arrayOfNums) / arrayOfNums.length;\n}\n\nexport function toPolar(x: number, y: number): [number, number | undefined] {\n\tconst r = Mag([x, y]);\n\tconst theta = GetAzimXY([x, y]);\n\treturn [r, theta];\n}\n\nexport function fromPolar(r: number, theta: number): [number, number] {\n\treturn [r * Math.cos(theta), r * Math.sin(theta)]\n}\n\nexport function rot2D(point: number[], alpha: number): number[] { //rotates clockwise with y pointing down\n\tlet rotMat: number[][] = [[Math.cos(alpha), Math.sin(alpha)], [-Math.sin(alpha), Math.cos(alpha)]];\n\treturn multiply(point, rotMat);\n}\n\nexport function range(start: number, stop: number): number[] {\n\t// returns list of integers from start (inclusive) to stop (exclusive)\n\tvar out = [];\n\tfor (var i = start; i < stop; i++) {\n\t\tout.push(i);\n\t}\n\treturn out;\n}\n\nexport function linspace(start: number, stop: number, N: number): number[] {\n\t// N is length of linspace array\n\tconst step = (stop - start) / (N - 1);\n\tlet space = [];\n\tfor (var i = 0; i < N; i++) {\n\t\tspace.push(start + i * step);\n\t}\n\treturn space\n}\n\nexport function linspace2D(start: number[], stop: number[], N: number): number[][] {\n\t// N is length of linspace array\n\tconst step = multiply(addVec(stop, multiply(start, -1)), 1 / (N - 1));\n\tlet space: number[][] = [];\n\tfor (var i = 0; i < N; i++) {\n\t\tspace.push(addVec(start, multiply(step, i)));\n\t}\n\treturn space\n}\n\nexport function makeGrid(numRows: number, numCols: number, valFunc: (i: number, j: number) => any): any[][] {\n\t// produces a grid of zeros\n\t// valFunc is func of grid position (i and j)\n\tlet out = [];\n\tfor (var i = 0; i < numRows; i++) {\n\t\tlet row = [];\n\t\tfor (var j = 0; j < numCols; j++) {\n\t\t\trow.push(valFunc(i, j));\n\t\t}\n\t\tout.push(row);\n\t}\n\treturn out;\n}\n\nexport function makeGridMap(grid: any[][]): Map<any, any> {\n\t// returns map of linear indices to grid positions\n\tlet gridMap = new Map();\n\n\tvar index = 0;\n\tfor (var i = 0; i < grid.length; i++) {\n\t\tfor (var j = 0; j < grid[0].length; j++) {\n\t\t\tgridMap.set(index, [i, j]);\n\t\t\tindex++;\n\t\t}\n\t}\n\n\treturn gridMap;\n}\n\nexport function zeroes(length: number): number[] {\n\tlet space = []\n\tfor (var i = 0; i < length; i++) {\n\t\tspace.push(0)\n\t}\n\treturn space\n}\n\nexport function rk4(\n\tderivs: (x: number, y: number, params: object, t: number) => [number, number], \n\tparams: object, \n\txy0: [number, number], \n\tdt: number, \n\tt: number\n): [number, number] {\n\t//derivs is func of x, y, params, t that returns [xDot,yDot]\n\t//this func returns update x,y after one step of dt\n\tconst x0 = xy0[0];\n\tconst y0 = xy0[1];\n\tconst k1 = derivs(x0, y0, params, t);\n\tconst k2 = derivs(x0 + k1[0] * dt / 2, y0 + k1[1] * dt / 2, params, t + dt / 2);\n\tconst k3 = derivs(x0 + k2[0] * dt / 2, y0 + k2[1] * dt / 2, params, t + dt / 2);\n\tconst k4 = derivs(x0 + k3[0] * dt, y0 + k3[1] * dt, params, t + dt);\n\tconst k = (1 / 6) * (k1[0] + 2 * k2[0] + 2 * k3[0] + k4[0]);\n\tconst l = (1 / 6) * (k1[1] + 2 * k2[1] + 2 * k3[1] + k4[1]);\n\treturn [x0 + k * dt, y0 + l * dt];\n}\n\nexport function rk4Double(\n\tderiv: (x: number[], v: number[], params: object) => [number[], number[]], \n\txv0: [number[], number[]], \n\tparams: object,\n\tdt: number\n): [number[], number[]] {\n\t//performs 2D rk4 for xDoubleDot=f(x)\n\t//deriv is func of x=[x,y], v=[xDot,yDot], and params, returns [v,a]\n\t//xy0=[[x,y],v=[xDot,yDot]]\n\t//this func returns [x,v] after one step\n\tconst x0 = xv0[0];\n\tconst v0 = xv0[1];\n\tconst k1 = deriv(x0, v0, params);\n\tconst k2 = deriv(addVec(x0, multiply(k1[0], dt / 2)), addVec(v0, multiply(k1[1], dt / 2)), params);\n\tconst k3 = deriv(addVec(x0, multiply(k2[0], dt / 2)), addVec(v0, multiply(k2[1], dt / 2)), params);\n\tconst k4 = deriv(addVec(x0, multiply(k3[0], dt / 2)), addVec(v0, multiply(k3[1], dt / 2)), params);;\n\tconst k = multiply(addVec(addVec(k1[0], multiply(k2[0], 2)), addVec(multiply(k3[0], 2), k4[0])), (1 / 6));\n\tconst l = multiply(addVec(addVec(k1[1], multiply(k2[1], 2)), addVec(multiply(k3[1], 2), k4[1])), (1 / 6));\n\treturn [addVec(x0, multiply(k, dt)), addVec(v0, multiply(l, dt))];\n}","import React from 'react'\nimport GridContainer from './GridContainer'\nimport GridStaticContainer from './GridStaticContainer'\nimport GridItem from './GridItem'\nimport GridStaticItem from './GridStaticItem'\nimport { makeGrid } from '../../helpers/vecFuncs'\nimport { GIProps, LayoutGrid } from './types'\n\nfunction createGridArray(padding: number, numRows: number, numCols: number): string[][] {\n  const stepLeft = (100 - 2*padding) / numCols\n  const stepTop = (100 - 2*padding) / numRows\n  const p0left = padding + stepLeft/2\n  const p0top = padding + stepTop/2\n  return makeGrid(numRows, numCols, function(i, j) {\n    return [(p0left + j*stepLeft)+'%', (p0top + i*stepTop)+'%']\n  })\n}\n\nfunction makeLayoutGrid(padding: number, numRows: number, numCols: number) {\n  const gridArray = createGridArray(padding, numRows, numCols)\n  function Item({ gridPos, style, children }: GIProps) {\n    return (\n      <GridItem gridPos={gridPos} grid={gridArray} style={style} children={children}/>\n    )\n  }\n  function StaticItem({ gridPos, style, children}: GIProps) {\n    return (\n      <GridStaticItem gridPos={gridPos} grid={gridArray} style={style} children={children}/>\n    )\n  }\n  const Grid: LayoutGrid = {\n    grid: gridArray,\n    Container: GridContainer,\n    StaticContainer: GridStaticContainer,\n    Item: Item,\n    StaticItem: StaticItem,\n  }\n\n  return Grid\n}\n\nexport default makeLayoutGrid","import {createUseStyles} from 'react-jss'\nimport { Theme } from '../../appColors'\n\nconst useStyles = createUseStyles({\n  Button: {\n    backgroundColor: (theme: Theme) => theme.colors.secondary,\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '15px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    userSelect: 'none',\n  },\n})\n\nexport default useStyles;","const primary = '#282c34' // grey\nconst secondary = '#281c34' //purple\nconst tertiary = '#182c54' // blue\n\nexport interface Colors {\n  primary: string,\n  secondary: string,\n  tertiary: string\n}\n\nexport interface Theme {\n  colors: Colors\n}\n\nconst colors: Colors = {\n  primary: primary,\n  secondary: secondary,\n  tertiary: tertiary,\n}\n\nexport default colors\n\n\n","import React, {useState} from 'react'\nimport useStyles from './style'\nimport { animated, useSpring } from 'react-spring'\nimport colors from '../../appColors'\n\nconst upShadow = '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\nconst downShadow = '0 0px 0px 0 rgba(0, 0, 0, 0.2), 0 0px 0px 0 rgba(0, 0, 0, 0.19)'\n\nconst upFont = 'calc(10px + 2vmin)'\nconst downFont = 'calc(9px + 2vmin)'\n\ninterface Props {\n  style?: object,\n  onClick: () => void,\n  children: any\n}\n\nfunction Button({ style, onClick, children }: Props) {\n  const classes = useStyles({colors: colors})\n  const [pressed, setPressed] = useState(false)\n  const buttonSpring = useSpring({\n    boxShadow: pressed ? downShadow : upShadow,\n    fontSize: pressed ? downFont : upFont,\n    transform: pressed ? 'scale(0.95)' : 'scale(1)'\n  })\n  return (\n    <animated.div \n      className={classes.Button} \n      style={Object.assign(buttonSpring, style)}\n      onMouseDown={() => setPressed(true)}\n      onMouseUp={() => {\n        setPressed(false)\n        onClick()\n      }}\n    >\n      {children}\n    </animated.div>\n  );\n}\n\nexport default Button;","import React from 'react'\nimport Button from '../../components/Button/main'\nimport { useSpring, animated } from 'react-spring'\nimport colors from '../../appColors'\n\ninterface BaseProps {\n\tisOpen: boolean,\n\topenWidth: number,\n\tclosedWidth: number,\n\topenText: string,\n\tclosedText: string,\n\tonClick: () => void,\n\tstyle?: object,\n}\n\ninterface BaseStyle {\n\theight: string,\n\tposition: string,\n\tbackgroundColor: string,\n}\n\nconst baseStyle: BaseStyle = {\n\theight: '7vh',\n\tposition: 'absolute',\n\tbackgroundColor: colors.primary,\n}\n\ninterface BaseTextStyle {\n\tposition: string\n}\n\nconst baseTextStyle: BaseTextStyle = {\n\tposition: 'absolute'\n}\n\nfunction SideBarButton({ isOpen, openWidth, closedWidth, openText, closedText, onClick, style }: BaseProps) {\n\tconst buttonSpring = useSpring({ width: isOpen ? openWidth - 10 : closedWidth - 10 })\n\tconst closedTextSpring = useSpring({ \n\t\topacity: isOpen ? 0 : 1,\n\t\ttransform: isOpen ? 'scaleX(0)' : 'scaleX(1)',\n\t})\n\tconst openTextSpring = useSpring({ \n\t\topacity: isOpen ? 1 : 0,\n\t\ttransform: isOpen ? 'scaleX(1)' : 'scaleX(0)',\n\t})\n\n\tconst baseStyleCopy = Object.assign({}, baseStyle)\n\tconst baseTextStyleCopy = Object.assign({}, baseTextStyle)\n\treturn (\n\t\t<Button style={Object.assign(buttonSpring, Object.assign(baseStyleCopy, style))} onClick={onClick}>\n\t\t\t<animated.div style={Object.assign(closedTextSpring, baseTextStyleCopy)}>{closedText}</animated.div>\n\t\t\t<animated.div style={Object.assign(openTextSpring, baseTextStyleCopy)}>{openText}</animated.div>\n\t\t</Button>\n\t)\n}\n\nexport default SideBarButton","import React, { Children } from 'react';\nimport { useSpring, animated } from 'react-spring'\nimport makeLayoutGrid from '../../components/Grid/main'\nimport SideBarButton from './SideBarButton'\nimport colors from '../../appColors';\n\ninterface Classes {\n  SideBar: any\n}\n\ninterface Props {\n  isOpen: boolean,\n  toggleOpen: () => void,\n  openWidth: number,\n  closedWidth: number,\n  classes: Classes,\n  children: any\n}\n\nconst grid = makeLayoutGrid(5, 20, 1)\n\nfunction SideBar({ isOpen, toggleOpen, openWidth, closedWidth, classes, children }: Props): JSX.Element {\n  \n  const navSpring = useSpring({ width: isOpen ? openWidth : closedWidth })\n\n  return (\n    <animated.div className={classes.SideBar} style={navSpring}>\n      <grid.Container>\n        <grid.Item gridPos={[0,0]}>\n          <SideBarButton \n            isOpen={isOpen}\n            openWidth={openWidth}\n            closedWidth={closedWidth}\n            openText='<'\n            closedText='>'\n            onClick={toggleOpen}\n            style={{ backgroundColor: colors.tertiary }}\n          />\n        </grid.Item>\n        {Children.map(children, (child, index) => {\n          return (\n            <grid.Item key={index} gridPos={[2*index+3,0]}>\n              {child}\n            </grid.Item>\n          )\n        })}\n      </grid.Container>\n    </animated.div>\n  )\n}\n\nexport default SideBar","import React from 'react'\nimport TopBar from './TopBar'\nimport SideBar from './SideBar'\n\ninterface Classes {\n  TopBar: any,\n  SideBar: any\n}\n\ninterface Props {\n  isOpen: boolean,\n  toggleOpen: () => void,\n  openWidth: number,\n  closedWidth: number,\n  classes: Classes,\n  children: any\n}\n\nconst topText = 'My React'\n\nfunction NavBar({ isOpen, toggleOpen, openWidth, closedWidth, classes, children }: Props): JSX.Element {\n  return (\n    <React.Fragment>\n      <TopBar classes={classes} text={topText}/>\n      <SideBar\n        isOpen={isOpen}\n        toggleOpen={toggleOpen}\n        openWidth={openWidth}\n        closedWidth={closedWidth}\n        classes={classes}\n        children={children}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default NavBar","import React from 'react';\nimport { animated } from 'react-spring'\n\ninterface Props {\n  classes: any,\n  number: number,\n  onClick: () => void\n}\n\nfunction Tile({ classes, number, onClick}: Props) {\n  return (\n    <animated.div \n      className={classes.Tile} \n      onClick={onClick}\n    >\n      {number}\n    </animated.div>\n  )\n}\n\nexport default Tile","import {createUseStyles} from 'react-jss'\nimport { Theme } from '../../appColors'\n\nconst useStyles = createUseStyles({\n  Bounder: {\n    position: 'absolute',\n    display: 'flex',\n    width: '80vmin',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  TilePuzzle: {\n    backgroundColor: (props: Theme) => props.colors.primary,\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '60vmin',\n    height: '60vmin',\n    borderRadius: '25px',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n  },\n\n  Tile: {\n    backgroundColor: (props: Theme) => props.colors.secondary,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '10vmin',\n    height: '10vmin',\n    fontSize: 'calc(10px + 2vmin)',\n    borderRadius: '10px',\n    position: 'absolute',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'default',\n    },\n    userSelect: 'none',\n  },\n\n  Solved: {\n    backgroundColor: (props: Theme) => props.colors.secondary,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '60vmin',\n    height: '10vmin',\n    fontSize: 'calc(10px + 2vmin)',\n    borderRadius: '10px',\n    position: 'absolute',\n    top: '4%',\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n    '&:hover': {\n      cursor: 'default',\n    },\n    userSelect: 'none',\n  },\n})\n\nexport default useStyles;","export function randomGen(min: number, max: number): number {\n  // inclusive of max\n  const scale = max - min;\n  return min + scale * Math.random();\n}\n\nexport function randomGenInt(min: number, max: number) {\n  // inclusive of max\n  return Math.round(randomGen(min - .5, max + .5));\n}","import { range } from '../../helpers/vecFuncs'\nimport { randomGenInt } from '../../helpers/randomGen'\nimport { arrayEqual } from '../../helpers/genFuncs'\n\ninterface Tile {\n  position: [number, number],\n  solvedPosition: [number, number]\n}\n\ninterface Empty {\n  position: [number, number],\n  isEmpty: boolean\n}\n\nexport interface TileGrid {\n  tileRange: number[],\n  empty: Empty,\n  [index: number]: Tile\n}\n\nexport function makeTileGrid(): TileGrid {\n  const tileRange = range(1,16)\n  let tg: any = {}\n  tg.tileRange = range(1,16)\n\n  for (var i=0; i<tileRange.length; i++) {\n    var row = Math.floor((tileRange[i] - 1)/4)\n    var col = (tileRange[i]-1) % 4\n    tg[tileRange[i]] = {\n      position: [row, col],\n      solvedPosition: [row, col],\n    }\n  }\n\n  tg.empty = {\n    position: [3,3],\n    isEmpty: true\n  }\n\n  const tileGrid: TileGrid = tg\n\n  return tileGrid\n}\n\nfunction nextToEmpty(tileGrid: TileGrid, tileIndex: number) {\n  const tilePos = tileGrid[tileIndex].position\n  const emptyPos = tileGrid.empty.position\n  if (emptyPos[0] === tilePos[0]) {\n    return (\n      emptyPos[1] === tilePos[1] - 1 || \n      emptyPos[1] === tilePos[1] + 1\n    )\n  } else if (emptyPos[1] === tilePos[1]) {\n    return (\n      emptyPos[0] === tilePos[0] - 1 || \n      emptyPos[0] === tilePos[0] + 1\n    )\n  }\n  return false\n}\n\nfunction getRandIndexNextToEmpty(tileGrid: TileGrid) {\n  const tileRange = tileGrid.tileRange\n  let indices = []\n  for(var i = 0; i < tileRange.length; i++) {\n    if (nextToEmpty(tileGrid, tileRange[i])) {\n      indices.push(tileRange[i])\n    }\n  }\n  return indices[randomGenInt(0,indices.length-1)]\n}\n\nfunction isSolvedRec(tileGrid: TileGrid, index: number): boolean {\n  if (index === 0) {\n    return true\n  } else {\n    const tile = tileGrid[index]\n    if (arrayEqual(tile.position, tile.solvedPosition)) {\n      return isSolvedRec(tileGrid, index - 1)\n    } else {\n      return false\n    }\n  }\n}\n\nexport function isSolved(tileGrid: TileGrid) {\n  return isSolvedRec(tileGrid, 15)\n}\n\nexport function moveToEmpty(tileGrid: TileGrid, tileIndex: number) {\n  if (nextToEmpty(tileGrid, tileIndex)) {\n    const temp = tileGrid[tileIndex].position\n    tileGrid[tileIndex].position = tileGrid.empty.position\n    tileGrid.empty.position = temp\n  }\n}\n\nexport function shuffleTiles(tileGrid: TileGrid, numMoves: number) {\n  // performes instant shuffling of tiles\n  for (var i = 0 ; i < numMoves; i++) {\n    moveToEmpty(tileGrid, getRandIndexNextToEmpty(tileGrid))\n  }\n}","export function stringIn(str: string, ar: any[]): boolean {\n\t// returns true if string is an element of array\n\t// false otherwise\n\tfor (var i = 0; i < ar.length; i++) {\n\t\tif (ar[i] === str) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nexport function bothStringsIn(str1: string, str2: string, ar: any[]) {\n\treturn (stringIn(str1, ar) && stringIn(str2, ar))\n}\n\nexport function switchVarIntoList(variable: any, list: any[], index: number) {\n\t// variable is set to list[index]\n\t// puts variable into list at index (replacing what's there)\n\t// ex. variable = GF.SwitchVarIntoList(variable, list, index);\n\tvar temp = list[index]\n\tlist[index] = variable\n\t\n\treturn temp\n}\n\nexport function wrap<T>(func: (...args: any[]) => T, ...args: any[]) {\n\tvar wrapped: () => T = function () {\n\t\treturn func(...args)\n\t}\n\t\n\treturn wrapped\n}\n\nexport function arrayEqual(arr1: any[], arr2: any[]) {\n\tif (arr1.length === arr2.length) {\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}","import React, {useState} from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport useStyles from './style'\nimport colors from '../../appColors'\nimport { Tile, TextButton } from '../all'\nimport makeLayoutGrid from '../Grid/main'\nimport { moveToEmpty, makeTileGrid, shuffleTiles, isSolved } from './helpers'\nimport { RouteComponentProps } from '@reach/router'\n\nconst layoutGrid = makeLayoutGrid(5, 4, 4)\n\nlet tileGrid = makeTileGrid()\n//shuffleTiles(tileGrid, 150)\n\ninterface PG {\n  classes: object,\n  setSolved: (solved: boolean) => void\n}\n\nfunction PuzzleGrid({ classes, setSolved }: PG) {\n  const [numMoves, setState] = useState(0)\n\n  function innerMoveToEmpty(tileIndex: number) {\n    moveToEmpty(tileGrid, tileIndex)\n    if (isSolved(tileGrid)) {\n      setSolved(true)\n      permaSolved = true\n    } else {\n      setSolved(false)\n      permaSolved = false\n    }\n    setState(numMoves + 1)\n  }\n\n  return (\n    <layoutGrid.Container>\n      {tileGrid.tileRange.map((number) => {\n        return (\n          <layoutGrid.Item key={number} gridPos={tileGrid[number].position} >\n            <Tile classes={classes} number={number} onClick={() => innerMoveToEmpty(number)}/>\n          </layoutGrid.Item>\n        )\n      })}\n    </layoutGrid.Container>\n  )\n}\n\nconst boundingGrid = makeLayoutGrid(0, 40, 1)\nlet permaSolved = false\n\nfunction TilePuzzle(props: RouteComponentProps) {\n  const classes = useStyles({ colors: colors });\n  const [shuffleCount, setShuffleCount] = useState(0)\n  const [solved, setSolved] = useState(permaSolved)\n\n  const solvedSpring = useSpring({\n    opacity: solved ? 1 : 0,\n    transform: solved ? 'scale(1)' : 'scale(0)'\n  })\n  \n  function innerShuffle() {\n    shuffleTiles(tileGrid, 150)\n    setShuffleCount(shuffleCount + 1)\n    setSolved(false)\n    permaSolved = false\n  }\n  \n  return (\n    <div className={classes.Bounder}>\n      <boundingGrid.Container>\n        <boundingGrid.Item gridPos={[20,0]}>\n          <div className={classes.TilePuzzle}>\n            <PuzzleGrid \n              classes={classes}\n              setSolved={setSolved}\n            />\n          </div>\n        </boundingGrid.Item>\n        <boundingGrid.Item gridPos={[36,0]}>\n          <TextButton text='shuffle' onClick={innerShuffle} style={{\n              width: '18vmin',\n              height: '8vmin',\n            }}/>\n        </boundingGrid.Item>\n        <boundingGrid.Item gridPos={[1,0]}>\n          <animated.div className={classes.Solved} style={solvedSpring}>\n            Solved!\n          </animated.div>\n        </boundingGrid.Item>\n      </boundingGrid.Container>\n    </div>\n  )\n}\n\nexport default TilePuzzle","import React from 'react';\nimport Button from './main'\n\ninterface Props {\n  text: string,\n  style: object,\n  onClick: () => void\n}\n\nfunction TextButton({ text, style, onClick }: Props) {\n  return (\n    <Button style={style} onClick={onClick}>\n      {text}\n    </Button>\n  );\n}\n\nexport default TextButton;","import {createUseStyles} from 'react-jss'\n\nconst useStyles = createUseStyles({\n  Bounder: {\n    position: 'absolute',\n    display: 'flex',\n    width: '80vmin',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  Piece: {\n    width: '10vmin',\n    height: '10vmin'\n  },\n\n  HighlightedSquare: {\n    width: '10vmin',\n    height: '10vmin',\n  },\n})\n\nexport default useStyles;","import React from 'react'\nimport { BoardPos } from './types'\nimport colors from '../../appColors'\nimport { LayoutGrid } from '../Grid/types'\n\ninterface BoardTileProps {\n  grid: LayoutGrid,\n  gridPos: BoardPos,\n}\n\ninterface TileStyle {\n  backgroundColor: string,\n  width: string,\n  height: string,\n}\n\nconst whiteTileStyle: TileStyle = {\n  backgroundColor: colors.primary,\n  width: '10vmin',\n  height: '10vmin',\n}\n\nconst blackTileStyle: TileStyle = {\n  backgroundColor: colors.secondary,\n  width: '10vmin',\n  height: '10vmin',\n}\n\nfunction BoardTile({ grid, gridPos }: BoardTileProps) {\n  const isWhite = ((gridPos[0] + gridPos[1]) % 2 === 0)\n  return (\n    <grid.StaticItem \n      gridPos={gridPos}\n      style={isWhite ? whiteTileStyle : blackTileStyle}\n    />\n  )\n}\n\nexport default BoardTile","import React from 'react'\nimport { LayoutGrid } from '../Grid/types';\nimport useStyles from './style';\n\ninterface Props {\n  grid: LayoutGrid,\n  gridPos: [number, number],\n  onClick: () => void\n}\n\nfunction HighlightedSquare({ grid, gridPos, onClick}: Props) {\n  const classes = useStyles()\n  return (\n    <grid.StaticItem gridPos={gridPos}>\n      <svg className={classes.HighlightedSquare} onClick={onClick}>\n        <circle cx=\"50%\" cy=\"50%\" r=\"2.5vmin\" stroke=\"black\" strokeWidth=\"3\" fill=\"white\" opacity='0.25'/>\n      </svg>\n    </grid.StaticItem>\n  );\n}\n\nexport default HighlightedSquare","import { GridPieceStyle } from \"../types\"\n\nexport const gridPieceStyle: GridPieceStyle = {\n  width: '10vmin',\n  height:'10vmin',\n}","import { createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles({\n  Piece: {\n    width: '10vmin',\n    height: '8vmin'\n  }\n})\n\nexport default useStyles;","import React from 'react';\nimport { PieceComponentProps } from '../types'\nimport { gridPieceStyle } from './pieceStyle';\nimport whiteBishopIcon from './icons/whiteBishop.svg'\nimport blackBishopIcon from './icons/blackBishop.svg'\nimport useStyles from './pieceJSS';\nimport { useSpring } from 'react-spring'\n\nfunction Bishop({ grid, gridPos, isWhite, onClick, isWhitesTurn }: PieceComponentProps) {\n  const classes = useStyles()\n  const springStyle = useSpring({ \n    transform: isWhitesTurn ? 'translate(-50%, -50%) rotate(0deg)' : 'translate(-50%, -50%) rotate(180deg)',\n    config: {\n      tension: 80,\n      mass: 2,\n      friction: 25\n    }\n  })\n  const gridPieceSpringStyle = Object.assign(Object.assign({}, gridPieceStyle), springStyle)\n  const imgStyle = { \n    transform: 'scaleX(1.2) scaleY(0.98)'\n  }\n  return (\n    <grid.Item gridPos={gridPos} style={gridPieceSpringStyle}>\n      <img\n        className={classes.Piece}\n        src={isWhite ? whiteBishopIcon : blackBishopIcon}\n        style={imgStyle}\n        alt='bishop icon'\n        onClick={onClick}\n      />\n    </grid.Item>\n  );\n}\n\nexport default Bishop;","import React from 'react'\nimport { PieceComponentProps } from '../types'\nimport { gridPieceStyle } from './pieceStyle';\nimport whiteKingIcon from './icons/whiteKing.svg'\nimport blackKingIcon from './icons/blackKing.svg'\nimport useStyles from './pieceJSS';\nimport { useSpring } from 'react-spring'\n\nfunction King({ grid, gridPos, isWhite, onClick, isWhitesTurn }: PieceComponentProps) {\n  const classes = useStyles()\n  const springStyle = useSpring({ \n    transform: isWhitesTurn ? 'translate(-50%, -50%) rotate(0deg)' : 'translate(-50%, -50%) rotate(180deg)', \n    config: {\n      tension: 80,\n      mass: 2,\n      friction: 25\n    }\n  })\n  const gridPieceSpringStyle = Object.assign(Object.assign({}, gridPieceStyle), springStyle)\n  const imgStyle = { \n    transform: 'scaleX(1) scaleY(0.98)'\n  }\n  return (\n    <grid.Item gridPos={gridPos} style={gridPieceSpringStyle}>\n      <img\n        className={classes.Piece}\n        src={isWhite ? whiteKingIcon : blackKingIcon}\n        style={imgStyle}\n        alt='king icon'\n        onClick={onClick}\n      />\n    </grid.Item>\n  );\n}\n\nexport default King","import React from 'react'\nimport { PieceComponentProps } from '../types'\nimport { gridPieceStyle } from './pieceStyle';\nimport whiteKnightIcon from './icons/whiteKnight.svg'\nimport blackKnightIcon from './icons/blackKnight.svg'\nimport useStyles from './pieceJSS';\nimport { useSpring } from 'react-spring'\n\nfunction Knight({ grid, gridPos, isWhite, onClick, isWhitesTurn }: PieceComponentProps) {\n  const classes = useStyles()\n  const springStyle = useSpring({ \n    transform: isWhitesTurn ? 'translate(-50%, -50%) rotate(0deg)' : 'translate(-50%, -50%) rotate(180deg)',\n    config: {\n      tension: 80,\n      mass: 2,\n      friction: 25\n    } \n  })\n  const gridPieceSpringStyle = Object.assign(Object.assign({}, gridPieceStyle), springStyle)\n  const imgStyle = { \n    transform: 'scaleX(1) scaleY(0.98)'\n  }\n  return (\n    <grid.Item gridPos={gridPos} style={gridPieceSpringStyle}>\n      <img\n        className={classes.Piece}\n        src={isWhite ? whiteKnightIcon : blackKnightIcon}\n        style={imgStyle}\n        alt='knight icon'\n        onClick={onClick}\n      />\n    </grid.Item>\n  );\n}\n\nexport default Knight","import React from 'react'\nimport { PieceComponentProps } from '../types'\nimport { gridPieceStyle } from './pieceStyle';\nimport whitePawnIcon from './icons/whitePawn.svg'\nimport blackPawnIcon from './icons/blackPawn.svg'\nimport useStyles from './pieceJSS';\nimport { useSpring } from 'react-spring'\n\nfunction Pawn({ grid, gridPos, isWhite, onClick, isWhitesTurn }: PieceComponentProps) {\n  const classes = useStyles()\n  const springStyle = useSpring({ \n    transform: isWhitesTurn ? 'translate(-50%, -50%) rotate(0deg)' : 'translate(-50%, -50%) rotate(180deg)',\n    config: {\n      tension: 80,\n      mass: 2,\n      friction: 25\n    } \n  })\n  const gridPieceSpringStyle = Object.assign(Object.assign({}, gridPieceStyle), springStyle)\n  const imgStyle = { \n    transform: 'scaleX(1.2) scaleY(0.98)'\n  }\n  return (\n    <grid.Item gridPos={gridPos} style={gridPieceSpringStyle}>\n      <img\n        className={classes.Piece}\n        src={isWhite ? whitePawnIcon : blackPawnIcon}\n        style={imgStyle}\n        alt='rook icon'\n        onClick={onClick}\n      />\n    </grid.Item>\n  );\n}\n\nexport default Pawn","import React from 'react'\nimport { PieceComponentProps } from '../types'\nimport { gridPieceStyle } from './pieceStyle';\nimport whiteQueenIcon from './icons/whiteQueen.svg'\nimport blackQueenIcon from './icons/blackQueen.svg'\nimport useStyles from './pieceJSS';\nimport { useSpring } from 'react-spring'\n\nfunction Queen({ grid, gridPos, isWhite, onClick, isWhitesTurn }: PieceComponentProps) {\n  const classes = useStyles()\n  const springStyle = useSpring({ \n    transform: isWhitesTurn ? 'translate(-50%, -50%) rotate(0deg)' : 'translate(-50%, -50%) rotate(180deg)',\n    config: {\n      tension: 80,\n      mass: 2,\n      friction: 25\n    }\n  })\n  const gridPieceSpringStyle = Object.assign(Object.assign({}, gridPieceStyle), springStyle)\n  const imgStyle = { \n    transform: 'scaleY(0.98)'\n  }\n  return (\n    <grid.Item gridPos={gridPos} style={gridPieceSpringStyle}>\n      <img\n        className={classes.Piece}\n        src={isWhite ? whiteQueenIcon : blackQueenIcon }\n        style={imgStyle}\n        alt='queen icon'\n        onClick={onClick}\n      />\n    </grid.Item>\n  );\n}\n\nexport default Queen","import React from 'react'\nimport { PieceComponentProps } from '../types'\nimport { gridPieceStyle } from './pieceStyle';\nimport whiteRookIcon from './icons/whiteRook.svg'\nimport blackRookIcon from './icons/blackRook.svg'\nimport useStyles from './pieceJSS';\nimport { useSpring } from 'react-spring'\n\nfunction Rook({ grid, gridPos, isWhite, onClick, isWhitesTurn }: PieceComponentProps) {\n  const classes = useStyles()\n  const imgStyle = { transform: 'scaleX(1.1) scaleY(0.98)' }\n  const springStyle = useSpring({\n    transform: isWhitesTurn ? 'translate(-50%, -50%) rotate(0deg)' : 'translate(-50%, -50%) rotate(180deg)',\n    config: {\n      tension: 80,\n      mass: 2,\n      friction: 25\n    }\n  })\n  const gridPieceSpringStyle = Object.assign(Object.assign({}, gridPieceStyle), springStyle)\n  return (\n    <grid.Item gridPos={gridPos} style={gridPieceSpringStyle}>\n      <img\n        className={classes.Piece}\n        src={isWhite ? whiteRookIcon : blackRookIcon}\n        style={imgStyle}\n        alt='rook icon'\n        onClick={onClick}\n      />\n    </grid.Item>\n  );\n}\n\nexport default Rook","import { makeGrid } from '../../helpers/vecFuncs'\nimport { ChessBoard, Piece, KingPiece, PawnPiece, PieceID, BoardPos, BoardGrid, Team } from './types'\nimport * as pieces from './pieces/all'\n\nfunction makeBoardGrid(): BoardGrid {\n  return makeGrid(8, 8, (i, j) => {\n    if (i === 0) { // black back rank\n      if ( j === 0 || j === 7) { // black rooks\n        return 'BR' + j\n      } else if ( j === 1 || j === 6 ) { // black knights\n        return 'BN' + j\n      } else if ( j === 2 || j === 5 ) { // black bishops\n        return 'BB' + j\n      } else if ( j === 3 ) { // black queen\n        return 'BQ'\n      } else if ( j === 4 ) { // black king\n        return 'BK'\n      }\n    } else if ( i === 7) { // white back rank\n      if ( j === 0 || j === 7) { // black rooks\n        return 'WR' + j\n      } else if ( j === 1 || j === 6 ) { // black knights\n        return 'WN' + j\n      } else if ( j === 2 || j === 5 ) { // black bishops\n        return 'WB' + j\n      } else if ( j === 3 ) { // black queen\n        return 'WQ'\n      } else if ( j === 4 ) { // black king\n        return 'WK'\n      }\n    } else if ( i === 1 ) { // black 2nd rank (pawns)\n      return 'BP' + j\n    } else if ( i === 6 ) { // white 2nd rank\n      return 'WP' + j\n    } else { // unoccupied\n      return 'E'\n    }\n  })\n}\n\nfunction boardGridEmpty(boardGrid: BoardGrid, boardPos: BoardPos) {\n  const tileContent = boardGrid[boardPos[0]][boardPos[1]]\n  return (\n    tileContent === 'E'\n  )\n}\n\nfunction boardGridOtherTeam(boardGrid: BoardGrid, boardPos: BoardPos, otherTeam: string) {\n  const tileContent = boardGrid[boardPos[0]][boardPos[1]]\n  return (\n    tileContent[0] === otherTeam\n  )\n}\n\nfunction boardGridEmptyOrOtherTeam(boardGrid: BoardGrid, boardPos: BoardPos, otherTeam: string) {\n  const tileContent = boardGrid[boardPos[0]][boardPos[1]]\n  return (\n    tileContent[0] === otherTeam ||\n    tileContent[0] === 'E'\n  )\n}\n\nfunction isEmptyDelta(boardGrid: BoardGrid, row: number, deltaRow: number, col: number, deltaCol: number) {\n  const newRow = row + deltaRow\n  const newCol = col + deltaCol\n  return (\n    (newRow > -1 && newRow < 8) &&\n    (newCol > -1 && newCol < 8) &&\n    boardGridEmpty(boardGrid, [newRow, newCol])\n  )\n}\n\nfunction isCaptureDelta(boardGrid: BoardGrid, otherTeam: string, row: number, deltaRow: number, col: number, deltaCol: number) {\n  const newRow = row + deltaRow\n  const newCol = col + deltaCol\n  return (\n    (newRow > -1 && newRow < 8) &&\n    (newCol > -1 && newCol < 8) &&\n    boardGridOtherTeam(boardGrid, [newRow, newCol], otherTeam)\n  )\n}\n\nfunction isValidDelta(boardGrid: BoardGrid, otherTeam: string, row: number, deltaRow: number, col: number, deltaCol: number) {\n  const newRow = row + deltaRow\n  const newCol = col + deltaCol\n  return (\n    (newRow > -1 && newRow < 8) &&\n    (newCol > -1 && newCol < 8) &&\n    boardGridEmptyOrOtherTeam(boardGrid, [newRow, newCol], otherTeam)\n  )\n}\n\nfunction showPossiblePawnMoves(chessBoard: ChessBoard, pawn: PawnPiece, boardPos: BoardPos, isWhite: boolean) {\n  const step = isWhite ? -1 : 1\n  const startingRank = isWhite ? 6 : 1\n  const otherColor = isWhite ? 'B' : 'W'\n  const aliveOtherPiecesKey = isWhite ? 'aliveBlackPieces' : 'aliveWhitePieces'\n  let possibleMoves: BoardPos[] = []\n  if (chessBoard.boardGrid[boardPos[0] + step][boardPos[1]] === 'E') {\n    possibleMoves.push([boardPos[0] + step, boardPos[1]])\n  }\n  if (boardPos[1] < 7 && chessBoard.boardGrid[boardPos[0] + step][boardPos[1] + 1][0] === otherColor) {\n    possibleMoves.push([boardPos[0] + step, boardPos[1] + 1])\n  }\n  if (boardPos[1] > 0 && chessBoard.boardGrid[boardPos[0] + step][boardPos[1] - 1][0] === otherColor) {\n    possibleMoves.push([boardPos[0] + step, boardPos[1] - 1])\n  }\n  chessBoard.highlightedSquares = possibleMoves\n  if (boardPos[0] === startingRank && chessBoard.boardGrid[boardPos[0] + 2*step][boardPos[1]] === 'E') {\n    const target = [boardPos[0] + 2*step, boardPos[1]] as BoardPos\n    chessBoard.specialHighlightedSquares.push({\n      boardPos: target,\n      onClick: () => {\n        movePiece(chessBoard, pawn, target, isWhite)\n        const posContent = chessBoard.boardGrid[target[0]][target[1]+1]\n        const negContent = chessBoard.boardGrid[target[0]][target[1]-1]\n        if (posContent.slice(0,2) === otherColor + 'P') {\n          const posPawn = chessBoard[aliveOtherPiecesKey][posContent] as PawnPiece\n          posPawn.canEnPassantNeg = true\n        }\n        if (negContent.slice(0,2) === otherColor + 'P') {\n          const negPawn = chessBoard[aliveOtherPiecesKey][negContent] as PawnPiece\n          negPawn.canEnPassantPos = true\n        }\n        chessBoard.specialHighlightedSquares = []\n      }\n    })\n  } else if (pawn.canEnPassantPos) {\n    chessBoard.specialHighlightedSquares.push({\n      boardPos: [boardPos[0] + step, boardPos[1] + 1],\n      onClick: () => {\n        pawn.enPassant([boardPos[0] + step, boardPos[1] + 1])\n        chessBoard.specialHighlightedSquares = []\n        pawn.canEnPassantNeg = false\n        pawn.canEnPassantPos = false\n      }\n    })\n  }\n  if (pawn.canEnPassantNeg) {\n    chessBoard.specialHighlightedSquares.push({\n      boardPos: [boardPos[0] + step, boardPos[1] - 1],\n      onClick: () => {\n        pawn.enPassant([boardPos[0] + step, boardPos[1] - 1])\n        chessBoard.specialHighlightedSquares = []\n      }\n    })\n  }\n}\n\nfunction showPossibleKingMoves(chessBoard: ChessBoard, king: KingPiece, boardPos: BoardPos, isWhite: boolean) {\n  const row = boardPos[0]\n  const col = boardPos[1]\n  const otherTeam = isWhite ? 'B' : 'W'\n  let possibleMoves: BoardPos[] = []\n  const i = 1\n  if (isValidDelta(chessBoard.boardGrid, otherTeam, row, i, col, i)) {\n    possibleMoves.push([row+i, col+i])\n  }\n  if (isValidDelta(chessBoard.boardGrid, otherTeam, row, i, col, -i)) {\n    possibleMoves.push([row+i, col-i])\n  }\n  if (isValidDelta(chessBoard.boardGrid, otherTeam, row, -i, col, i)) {\n    possibleMoves.push([row-i, col+i])\n  }\n  if (isValidDelta(chessBoard.boardGrid, otherTeam, row, -i, col, -i)) {\n    possibleMoves.push([row-i, col-i])\n  }\n  if (isValidDelta(chessBoard.boardGrid, otherTeam, row, i, col, 0)) {\n    possibleMoves.push([row+i, col])\n  }\n  if (isValidDelta(chessBoard.boardGrid, otherTeam, row, -i, col, 0)) {\n    possibleMoves.push([row-i, col])\n  }\n  if (isValidDelta(chessBoard.boardGrid, otherTeam, row, 0, col, i)) {\n    possibleMoves.push([row, col+i])\n  }\n  if (isValidDelta(chessBoard.boardGrid, otherTeam, row, 0, col, -i)) {\n    possibleMoves.push([row, col-i])\n  }\n  chessBoard.highlightedSquares = possibleMoves\n\n  if (king.canCastleShort) {\n    if (boardGridEmpty(chessBoard.boardGrid, [row, col+1]) && boardGridEmpty(chessBoard.boardGrid, [row, col+2])) {\n      chessBoard.specialHighlightedSquares.push({boardPos: [row, 6], onClick: () => {\n        king.shortCastle()\n      }})\n    }\n  }\n  if (king.canCastleLong) {\n    if (boardGridEmpty(chessBoard.boardGrid, [row, 1]) && boardGridEmpty(chessBoard.boardGrid, [row, 2]) && boardGridEmpty(chessBoard.boardGrid, [row, 3])) {\n      chessBoard.specialHighlightedSquares.push({boardPos: [row, 2], onClick: () => {\n        king.longCastle()\n      }})\n    }\n  }\n}\n\nfunction showPossibleQueenMoves(chessBoard: ChessBoard, boardPos: BoardPos, isWhite: boolean) {\n  const row = boardPos[0]\n  const col = boardPos[1]\n  const otherTeam = isWhite ? 'B' : 'W'\n  let possibleMoves: BoardPos[] = []\n  let i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, i, col, i)) {\n    possibleMoves.push([row+i, col+i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, i, col, i)){\n    possibleMoves.push([row+i, col+i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, i, col, -i)) {\n    possibleMoves.push([row+i, col-i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, i, col, -i)){\n    possibleMoves.push([row+i, col-i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, -i, col, i)) {\n    possibleMoves.push([row-i, col+i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, -i, col, i)){\n    possibleMoves.push([row-i, col+i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, -i, col, -i)) {\n    possibleMoves.push([row-i, col-i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, -i, col, -i)){\n    possibleMoves.push([row-i, col-i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, i, col, 0)) {\n    possibleMoves.push([row+i, col])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, i, col, 0)){\n    possibleMoves.push([row+i, col])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, -i, col, 0)) {\n    possibleMoves.push([row-i, col])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, -i, col, 0)){\n    possibleMoves.push([row-i, col])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, 0, col, i)) {\n    possibleMoves.push([row, col+i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, 0, col, i)){\n    possibleMoves.push([row, col+i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, 0, col, -i)) {\n    possibleMoves.push([row, col-i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, 0, col, -i)){\n    possibleMoves.push([row, col-i])\n  }\n  chessBoard.highlightedSquares = possibleMoves\n}\n\nfunction showPossibleRookMoves(chessBoard: ChessBoard, boardPos: BoardPos, isWhite: boolean) {\n  const row = boardPos[0]\n  const col = boardPos[1]\n  const otherTeam = isWhite ? 'B' : 'W'\n  let possibleMoves: BoardPos[] = []\n  let i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, i, col, 0)) {\n    possibleMoves.push([row+i, col])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, i, col, 0)){\n    possibleMoves.push([row+i, col])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, -i, col, 0)) {\n    possibleMoves.push([row-i, col])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, -i, col, 0)){\n    possibleMoves.push([row-i, col])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, 0, col, i)) {\n    possibleMoves.push([row, col+i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, 0, col, i)){\n    possibleMoves.push([row, col+i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, 0, col, -i)) {\n    possibleMoves.push([row, col-i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, 0, col, -i)){\n    possibleMoves.push([row, col-i])\n  }\n  chessBoard.highlightedSquares = possibleMoves\n}\n\nfunction showPossibleBishopMoves(chessBoard: ChessBoard, boardPos: BoardPos, isWhite: boolean) {\n  const row = boardPos[0]\n  const col = boardPos[1]\n  const otherTeam = isWhite ? 'B' : 'W'\n  let possibleMoves: BoardPos[] = []\n  let i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, i, col, i)) {\n    possibleMoves.push([row+i, col+i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, i, col, i)){\n    possibleMoves.push([row+i, col+i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, i, col, -i)) {\n    possibleMoves.push([row+i, col-i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, i, col, -i)){\n    possibleMoves.push([row+i, col-i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, -i, col, i)) {\n    possibleMoves.push([row-i, col+i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, -i, col, i)){\n    possibleMoves.push([row-i, col+i])\n  }\n  i = 1\n  while (isEmptyDelta(chessBoard.boardGrid, row, -i, col, -i)) {\n    possibleMoves.push([row-i, col-i])\n    i++\n  }\n  if (isCaptureDelta(chessBoard.boardGrid, otherTeam, row, -i, col, -i)){\n    possibleMoves.push([row-i, col-i])\n  }\n  chessBoard.highlightedSquares = possibleMoves\n}\n\nfunction showPossibleKnightMoves(chessBoard: ChessBoard, boardPos: BoardPos, isWhite: boolean) {\n  const row = boardPos[0]\n  const col = boardPos[1]\n  const otherTeam = isWhite ? 'B' : 'W'\n  let possibleMoves: BoardPos[] = []\n  if (row + 2 < 8 && col + 1 < 8 && boardGridEmptyOrOtherTeam(chessBoard.boardGrid, [row+2, col+1], otherTeam)) {\n    possibleMoves.push([row+2, col+1])\n  } if (row + 2 < 8 && col - 1 > -1 && boardGridEmptyOrOtherTeam(chessBoard.boardGrid, [row+2, col-1], otherTeam)) {\n    possibleMoves.push([row+2, col-1])\n  } if (row - 2 > -1 && col + 1 < 8 && boardGridEmptyOrOtherTeam(chessBoard.boardGrid, [row-2, col+1], otherTeam)) {\n    possibleMoves.push([row-2, col+1])\n  } if (row - 2 > -1 && col - 1 > -1 && boardGridEmptyOrOtherTeam(chessBoard.boardGrid, [row-2, col-1], otherTeam)) {\n    possibleMoves.push([row-2, col-1])\n  } if (row + 1 < 8 && col + 2 < 8 && boardGridEmptyOrOtherTeam(chessBoard.boardGrid, [row+1, col+2], otherTeam)) {\n    possibleMoves.push([row+1, col+2])\n  } if (row + 1 < 8 && col - 2 > -1 && boardGridEmptyOrOtherTeam(chessBoard.boardGrid, [row+1, col-2], otherTeam)) {\n    possibleMoves.push([row+1, col-2])\n  } if (row - 1 > -1 && col + 2 < 8 && boardGridEmptyOrOtherTeam(chessBoard.boardGrid, [row-1, col+2], otherTeam)) {\n    possibleMoves.push([row-1, col+2])\n  } if (row - 1 > -1 && col - 2 > -1 && boardGridEmptyOrOtherTeam(chessBoard.boardGrid, [row-1, col-2], otherTeam)) {\n    possibleMoves.push([row-1, col-2])\n  }\n  chessBoard.highlightedSquares = possibleMoves\n}\n\nfunction showPossibleMoves(chessBoard: ChessBoard, ID: string, isWhite: boolean) {\n  chessBoard.highlightedSquares = []\n  chessBoard.specialHighlightedSquares = []\n  if (isWhite === chessBoard.isWhitesTurn) {\n    const piecesKey = isWhite ? 'aliveWhitePieces' : 'aliveBlackPieces'\n    const boardPos = chessBoard[piecesKey][ID].position\n    if (ID[1] === 'P') {\n      const pawn = chessBoard[piecesKey][ID] as PawnPiece\n      showPossiblePawnMoves(chessBoard, pawn, boardPos, isWhite)\n    } else if (ID[1] === 'K') {\n      const king = chessBoard[piecesKey][ID] as KingPiece\n      showPossibleKingMoves(chessBoard, king, boardPos, isWhite)\n    } else if (ID[1] === 'Q') {\n      showPossibleQueenMoves(chessBoard, boardPos, isWhite)\n    } else if (ID[1] === 'R') {\n      showPossibleRookMoves(chessBoard, boardPos, isWhite)\n    } else if (ID[1] === 'B') {\n      showPossibleBishopMoves(chessBoard, boardPos, isWhite)\n    } else if (ID[1] === 'N') {\n      showPossibleKnightMoves(chessBoard, boardPos, isWhite)\n    }\n  }\n}\n\nfunction makePiece(chessBoard: ChessBoard, ID: PieceID, position: BoardPos, isWhite: boolean): Piece {\n  let component = pieces.Pawn\n  const team = isWhite ? 'W' : 'B'\n  if (ID[0] === 'K') {\n    component = pieces.King\n  } else if (ID[0] === 'Q') {\n    component = pieces.Queen\n  } else if (ID[0] === 'R') {\n    component = pieces.Rook\n  } else if (ID[0] === 'B') {\n    component = pieces.Bishop\n  } else if (ID[0] === 'N') {\n    component = pieces.Knight\n  }\n  return {\n    position: position,\n    Component: component,\n    onClick: () => {\n      showPossibleMoves(chessBoard,team + ID, isWhite)\n    },\n    isWhite: isWhite,\n    ID: ID,\n  }\n}\n\nfunction makePieces(chessBoard: ChessBoard, isWhite: boolean) {\n  const backRank = isWhite ? 7 : 0\n  const pawnRank = isWhite ? 6 : 1\n  const team = isWhite ? 'W' : 'B'\n  const enPassantStepBack = isWhite ? 1 : -1\n  const aliveOtherPiecesKey = isWhite ? 'aliveBlackPieces' : 'aliveWhitePieces'\n  const deadOtherPiecesKey = isWhite ? 'deadBlackPieces' : 'deadWhitePieces'\n  let pieces: any = {}\n  pieces[team + 'K'] = makePiece(chessBoard, 'K', [backRank, 4], isWhite) as KingPiece\n  pieces[team + 'Q'] = makePiece(chessBoard, 'Q', [backRank, 3], isWhite)\n  pieces[team + 'R0' ] = makePiece(chessBoard, 'R0', [backRank, 0], isWhite)\n  pieces[team + 'R7'] = makePiece(chessBoard, 'R7', [backRank, 7], isWhite)\n  pieces[team + 'N1'] = makePiece(chessBoard, 'N1', [backRank, 1], isWhite)\n  pieces[team + 'N6'] = makePiece(chessBoard, 'N6', [backRank, 6], isWhite)\n  pieces[team + 'B2'] = makePiece(chessBoard, 'B2', [backRank, 2], isWhite)\n  pieces[team + 'B5'] = makePiece(chessBoard, 'B5', [backRank, 5], isWhite)\n  for(var i = 0; i < 8; i++) {\n    let pawn = makePiece(chessBoard, 'P'+i, [pawnRank, i], isWhite) as PawnPiece\n    pawn.canEnPassantPos = false\n    pawn.canEnPassantNeg = false\n    pawn.enPassant = function(target: BoardPos) {\n      const capturedID = chessBoard.boardGrid[target[0] + enPassantStepBack][target[1]]\n      chessBoard[deadOtherPiecesKey][capturedID] = chessBoard[aliveOtherPiecesKey][capturedID]\n      delete chessBoard[aliveOtherPiecesKey][capturedID]\n      movePiece(chessBoard, pawn, target, isWhite)\n    }\n    pieces[team + 'P' + i] = pawn\n  }\n  pieces[team + 'K'].canCastleShort = true\n  pieces[team + 'K'].canCastleLong = true\n  pieces[team + 'K'].shortCastle = function() {\n    movePiece(chessBoard, pieces[team + 'K'], [backRank, 6], isWhite)\n    movePiece(chessBoard, pieces[team + 'R7'], [backRank, 5], isWhite)\n    chessBoard.isWhitesTurn = !chessBoard.isWhitesTurn\n    chessBoard.specialHighlightedSquares = []\n  }\n  pieces[team + 'K'].longCastle = function() {\n    movePiece(chessBoard, pieces[team + 'K'], [backRank, 2], isWhite)\n    movePiece(chessBoard, pieces[team + 'R0'], [backRank, 3], isWhite)\n    chessBoard.isWhitesTurn = !chessBoard.isWhitesTurn\n    chessBoard.specialHighlightedSquares = []\n  }\n  return pieces as Team\n}\n\nexport function movePiece(chessBoard: ChessBoard, piece: Piece, target: BoardPos, isWhite: boolean) {\n  const targetID = chessBoard.boardGrid[target[0]][target[1]]\n  chessBoard.isWhitesTurn = !chessBoard.isWhitesTurn\n  if (targetID === 'E') {\n    chessBoard.boardGrid[target[0]][target[1]] = chessBoard.boardGrid[piece.position[0]][piece.position[1]]\n    chessBoard.boardGrid[piece.position[0]][piece.position[1]] = 'E'\n    piece.position = target\n    // need to add to move list\n  } else {\n    const otherTeamKey = isWhite ? 'BlackPieces' : 'WhitePieces'\n    chessBoard['dead' + otherTeamKey][targetID] = chessBoard['alive' + otherTeamKey][targetID]\n    delete chessBoard['alive' + otherTeamKey][targetID]\n    chessBoard.boardGrid[target[0]][target[1]] = chessBoard.boardGrid[piece.position[0]][piece.position[1]]\n    chessBoard.boardGrid[piece.position[0]][piece.position[1]] = 'E'\n    piece.position = target\n  }\n  chessBoard.highlightedSquares = []\n  chessBoard.specialHighlightedSquares = []\n  \n}\n\nexport function makeChessBoard(): ChessBoard {\n  let chessBoard: ChessBoard = {\n    isWhitesTurn: true,\n    boardGrid: makeBoardGrid(),\n    moveList: [],\n    highlightedSquares: [],\n    specialHighlightedSquares: [],\n    aliveWhitePieces: {},\n    deadWhitePieces: {},\n    aliveBlackPieces: {},\n    deadBlackPieces: {},\n    highlightingPiece: undefined,\n  }\n  chessBoard.aliveWhitePieces = makePieces(chessBoard, true)\n  chessBoard.aliveBlackPieces = makePieces(chessBoard, false)\n  return chessBoard\n}","import React, {useState} from 'react'\nimport makeLayoutGrid from '../Grid/main'\nimport { ChessBoard, Piece, SpecialHighlightedSquare } from './types'\nimport BoardTile from './BoardTile'\nimport { renderWhitePieces, renderBlackPieces } from './pieces/RenderPieces'\nimport HighlightedSquare from './HighlightedSquare'\nimport { movePiece } from './helpers'\nimport { useSpring } from 'react-spring'\n\ninterface BoardProps {\n  chessBoard: ChessBoard\n}\n\ninterface BoardContainerStyle {\n  width: string,\n  height: string,\n}\n\nconst boardContainerStyle: BoardContainerStyle = {\n  width: '80vmin',\n  height: '80vmin',\n}\n\nconst grid = makeLayoutGrid(0, 8, 8)\n\nfunction Board({ chessBoard }: BoardProps) {\n  const [numClicks, setNumClicks] = useState(0)\n  const springStyle = useSpring({\n    transform: chessBoard.isWhitesTurn ? 'rotate(0deg)' : 'rotate(180deg)',\n    config: {\n      tension: 80,\n      mass: 2,\n      friction: 25\n    }\n  })\n  return (\n    <grid.Container style={Object.assign(springStyle, boardContainerStyle)}>\n      {chessBoard.boardGrid.map((row, i) => {\n        return row.map((pieceID, j) => {\n          return (\n            <BoardTile key={i*8 + j} grid={grid} gridPos={[i,j]}/>\n          )\n        })\n      }).flat()}\n      {renderWhitePieces(chessBoard, grid, numClicks, setNumClicks)}\n      {renderBlackPieces(chessBoard, grid, numClicks, setNumClicks)}\n      {chessBoard.highlightedSquares.map((square, i) => {\n        const movingPiece = chessBoard.highlightingPiece as Piece\n        function innerMovePiece() {\n          movePiece(chessBoard, movingPiece, square, movingPiece.isWhite)\n          setNumClicks(numClicks + 1)\n        }\n        return (\n          <HighlightedSquare key={movingPiece.ID + i} grid={grid} gridPos={square} onClick={innerMovePiece}/>\n        )\n      })}\n      {chessBoard.specialHighlightedSquares.map((square: SpecialHighlightedSquare, i: number) => {\n        const movingPiece = chessBoard.highlightingPiece as Piece\n        function innerOnClick() {\n          square.onClick()\n          setNumClicks(numClicks + 1)\n        }\n        return (\n          <HighlightedSquare key={movingPiece.ID + i} grid={grid} gridPos={square.boardPos} onClick={innerOnClick}/>\n        )\n      })}\n    </grid.Container>\n  )\n}\n\nexport default Board","import React from 'react'\nimport { ChessBoard } from '../types'\nimport { LayoutGrid } from '../../Grid/types';\n\nexport function renderWhitePieces(chessBoard: ChessBoard, grid: LayoutGrid, state: number, setState: (state: number) => void) {\n  return (\n    Object.keys(chessBoard.aliveWhitePieces).map((ID) => {\n      const piece = chessBoard.aliveWhitePieces[ID]\n      function onClick() {\n        piece.onClick()\n        chessBoard.highlightingPiece = piece\n        setState(state + 1)\n      }\n      return (\n        <piece.Component key={ID} grid={grid} gridPos={piece.position} isWhite={true} onClick={onClick} isWhitesTurn={chessBoard.isWhitesTurn}/>\n      )\n    })\n  )\n}\n\nexport function renderBlackPieces(chessBoard: ChessBoard, grid: LayoutGrid, state: number, setState: (state: number) => void) {\n  return (\n    Object.keys(chessBoard.aliveBlackPieces).map((ID) => {\n      const piece = chessBoard.aliveBlackPieces[ID]\n      function onClick() {\n        piece.onClick()\n        chessBoard.highlightingPiece = piece\n        setState(state + 1)\n      }\n      return (\n        <piece.Component key={ID} grid={grid} gridPos={piece.position} isWhite={false} onClick={onClick} isWhitesTurn={chessBoard.isWhitesTurn}/>\n      )\n    })\n  )\n}\n","import React from 'react'\nimport useStyles from './style'\nimport Board from './Board'\nimport { RouteComponentProps } from '@reach/router'\nimport colors from '../../appColors'\nimport { makeChessBoard } from './helpers'\n\nlet chessBoard = makeChessBoard()\n\nfunction ChessGame(props: RouteComponentProps) {\n  const classes = useStyles({ colors: colors})\n  return (\n    <div className={classes.Bounder}>\n      <Board chessBoard={chessBoard}/>\n    </div>\n  )\n}\n\nexport default ChessGame","import { createUseStyles } from 'react-jss'\nimport { Theme } from '../appColors'\n\n// useStyles will input a props object\n\nconst useStyles = createUseStyles({\n  NavBar: {\n    textAlign: 'center',\n  },\n\n  TopBar: {\n    backgroundColor: (theme: Theme) => theme.colors.primary,\n    width: '100vw',\n    height: '80px',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white',\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    userSelect: 'none',\n    zIndex: '100'\n  },\n\n  SideBar: {\n    backgroundColor: (theme: Theme) => theme.colors.secondary,\n    height: 'calc(100vh - 80px)',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white',\n    textOrientation: 'upright',\n    position: 'absolute',\n    top: '80px',\n    left: '0px',\n    userSelect: 'none',\n    zIndex: '99'\n  },\n  \n  AppContent: {\n    backgroundColor: (theme: Theme) => theme.colors.tertiary,\n    height: 'calc(100vh - 80px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white',\n    position: 'absolute',\n    top: '80px',\n    overflow: 'hidden',\n  },\n\n  Router: {\n    width: '100%',\n    height: '100%',\n  },\n})\n\nexport default useStyles;","import React from 'react'\nimport { RouteComponentProps } from '@reach/router'\n\nfunction Homepage(props: RouteComponentProps) {\n  return (\n    <div>\n      Homepage\n    </div>\n  )\n}\n\nexport default Homepage","import React, { useState } from 'react'\nimport NavBar from './NavBar/main'\nimport SideBarButton from './NavBar/SideBarButton'\nimport { TilePuzzle, ChessGame } from '../components/all'\nimport { Router, navigate } from '@reach/router'\nimport useStyles from './style'\nimport colors from '../appColors'\nimport Homepage from './Homepage'\n\ninterface ContentStyle {\n  width: string,\n  left: number,\n}\n\n// set open / close menu size (in pixels)\nconst closedWidth = 70\nconst openWidth = 230\n\nconst contentStyle = {\n  width: `calc(100vw - ${closedWidth}px)`,\n  left: closedWidth\n}\n\nfunction App(): JSX.Element {\n  const [open, toggle] = useState(false);\n\n  const classes = useStyles({ colors: colors})\n\n  function toggleOpen() {\n    toggle(!open)\n  }\n\n  return (\n    <div>\n      <NavBar \n        isOpen={open}\n        toggleOpen={toggleOpen}\n        openWidth={openWidth}\n        closedWidth={closedWidth}\n        classes={classes}\n      >\n        <SideBarButton \n          isOpen={open}\n          openWidth={openWidth}\n          closedWidth={closedWidth}\n          openText='Home'\n          closedText='H'\n          onClick={() => {\n            navigate('/')\n          }}\n        />\n        <SideBarButton \n          isOpen={open}\n          openWidth={openWidth}\n          closedWidth={closedWidth}\n          openText='TilePuzzle'\n          closedText='T'\n          onClick={() => {\n            navigate('/tilepuzzle')\n          }}\n        />\n        <SideBarButton \n          isOpen={open}\n          openWidth={openWidth}\n          closedWidth={closedWidth}\n          openText='Chess'\n          closedText='C'\n          onClick={() => {\n            navigate('/chess')\n          }}\n        />\n      </NavBar>\n      <Router className={classes.AppContent} style={contentStyle}>\n        <Homepage path='/' />\n        <TilePuzzle path='/tilepuzzle' />\n        <ChessGame path='/chess' />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}